name: Terraform Destroy (3-Tier)

on:
  workflow_dispatch:

env:
  TF_WORKDIR: terraform
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-west-2' }}

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # same naming logic as apply
      - name: Set backend names
        id: set-backend
        run: |
          set -eux
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          BUCKET="aws-3tier-tfstate-${ACCOUNT_ID}"
          TABLE="aws-3tier-tflock-${ACCOUNT_ID}"
          echo "TF_BUCKET=${BUCKET}" >> $GITHUB_ENV
          echo "TF_DDB_TABLE=${TABLE}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform init
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform init \
            -backend-config="bucket=${TF_BUCKET}" \
            -backend-config="key=aws-3tier/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_DDB_TABLE}"

      - name: Terraform destroy
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform destroy -auto-approve

      # delete S3 + DynamoDB AFTER destroy
      - name: Cleanup backend
        run: |
          set -eux
          aws dynamodb delete-table --table-name "$TF_DDB_TABLE" || true
          aws dynamodb wait table-not-exists --table-name "$TF_DDB_TABLE" || true

          # delete all objects then delete bucket
          aws s3 rm "s3://$TF_BUCKET" --recursive || true
          aws s3api delete-bucket --bucket "$TF_BUCKET" --region "$AWS_REGION" || true
