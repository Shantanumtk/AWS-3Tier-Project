name: Terraform Apply (3-Tier)

on:
  workflow_dispatch:
  push:
    paths:
      - "terraform/**"
      - ".github/workflows/tf-apply.yml"

env:
  TF_WORKDIR: terraform
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-west-2' }}

jobs:
  apply:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # build unique + valid names AFTER creds
      - name: Set backend names
        id: set-backend
        run: |
          set -eux
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          BUCKET="aws-3tier-tfstate-${ACCOUNT_ID}"
          TABLE="aws-3tier-tflock-${ACCOUNT_ID}"
          echo "TF_BUCKET=${BUCKET}" >> $GITHUB_ENV
          echo "TF_DDB_TABLE=${TABLE}" >> $GITHUB_ENV

      - name: Create S3 bucket if not exists
        run: |
          set -eux
          if aws s3api head-bucket --bucket "$TF_BUCKET" 2>/dev/null; then
            echo "Bucket $TF_BUCKET already exists"
          else
            aws s3api create-bucket \
              --bucket "$TF_BUCKET" \
              --region "$AWS_REGION" \
              --create-bucket-configuration LocationConstraint="$AWS_REGION"
            aws s3api put-bucket-versioning \
              --bucket "$TF_BUCKET" \
              --versioning-configuration Status=Enabled
          fi

      - name: Create DynamoDB table if not exists
        run: |
          set -eux
          if aws dynamodb describe-table --table-name "$TF_DDB_TABLE" >/dev/null 2>&1; then
            echo "DDB table $TF_DDB_TABLE already exists"
          else
            aws dynamodb create-table \
              --table-name "$TF_DDB_TABLE" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST
            aws dynamodb wait table-exists --table-name "$TF_DDB_TABLE"
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform init
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform init \
            -backend-config="bucket=${TF_BUCKET}" \
            -backend-config="key=aws-3tier/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_DDB_TABLE}"

      - name: Terraform validate
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform validate

      - name: Terraform apply
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform apply -auto-approve

      - name: Show frontend ALB DNS
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          echo "---- Terraform output ----"
          terraform output -json || true
          terraform output frontend_alb_dns || true
